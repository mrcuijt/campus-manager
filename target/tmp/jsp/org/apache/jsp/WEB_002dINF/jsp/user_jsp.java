/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.10.v20160621
 * Generated at: 2017-09-17 01:49:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>用户管理</title>\r\n");
      out.write("    <link rel=\"stylesheet\"\r\n");
      out.write("          href=\"../assets/bootstrap-table/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\"\r\n");
      out.write("          href=\"../assets/bootstrap-table/bootstrap-table.css\">\r\n");
      out.write("    <link rel=\"stylesheet\"\r\n");
      out.write("          href=\"../assets/bootstrap-table/bootstrap-editable.css\">\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/bootstrap-table.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/bootstrap-table-export.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/tableExport.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/bootstrap-table-editable.js\"></script>\r\n");
      out.write("    <script src=\"../assets/bootstrap-table/bootstrap-editable.js\"></script>\r\n");
      out.write("    <script src=\"../js/bootstrap-table-zh-CN.min.js\"></script>\r\n");
      out.write("    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("    <!--[if lt IE 9]>\r\n");
      out.write("    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js\"></script>\r\n");
      out.write("    <script src=\"//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <script src=\"//cdnjs.cloudflare.com/ajax/libs/json2/20140204/json2.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("    <script src=\"../js/util.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        .ml10 {\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #operate-success {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            background-color: #8AC007;\r\n");
      out.write("            color: #FBFBFB;\r\n");
      out.write("            visibility: hidden\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"page-header\">\r\n");
      out.write("        <h1>用户管理&nbsp;&nbsp;</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div style=\"text-align: center;\">\r\n");
      out.write("        <span id=\"operate-success\">设置成功</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <table id=\"table\" data-toggle=\"table\" data-show-export=\"false\"\r\n");
      out.write("               data-search=\"true\" data-url=\"/user/\"\r\n");
      out.write("               data-show-refresh=\"true\" data-show-toggle=\"true\"\r\n");
      out.write("               data-side-pagination=\"server\" data-pagination=\"true\">\r\n");
      out.write("            <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <!-- <th data-field=\"state\" data-checkbox=\"true\"></th> -->\r\n");
      out.write("                <th data-field=\"phone\">手机号</th>\r\n");
      out.write("                <th data-field=\"nickname\">昵称</th>\r\n");
      out.write("                <th data-field=\"type\">权限</th>\r\n");
      out.write("                <th data-field=\"createTime\">注册时间</th>\r\n");
      out.write("                <th data-field=\"lastLoginDate\">最后登录时间</th>\r\n");
      out.write("                <th data-field=\"defaultAddress\">默认地址</th>\r\n");
      out.write("                <th data-field=\"type\" data-formatter=\"typeFormatter\">用户类型</th>\r\n");
      out.write("                <th data-field=\"action\" data-formatter=\"actionFormatter\"\r\n");
      out.write("                    data-events=\"actionEvents\">权限修改\r\n");
      out.write("                </th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("    //    $(\"#table\").bootstrapTable({\r\n");
      out.write("    //        method: 'get',\r\n");
      out.write("    //        contentType: \"application/x-www-form-urlencoded\",//必须要有！！！！\r\n");
      out.write("    //        url:\"/user/1\",//要请求数据的文件路径\r\n");
      out.write("    ////        height:tableHeight(),//高度调整\r\n");
      out.write("    ////        toolbar: '#toolbar',//指定工具栏\r\n");
      out.write("    //        striped: true, //是否显示行间隔色\r\n");
      out.write("    //        dataField: \"res\",//bootstrap table 可以前端分页也可以后端分页，这里\r\n");
      out.write("    //        //我们使用的是后端分页，后端分页时需返回含有total：总记录数,这个键值好像是固定的\r\n");
      out.write("    //        //rows： 记录集合 键值可以修改  dataField 自己定义成自己想要的就好\r\n");
      out.write("    //        pageNumber: 1, //初始化加载第一页，默认第一页\r\n");
      out.write("    //        pagination:true,//是否分页\r\n");
      out.write("    //        queryParamsType:'limit',//查询参数组织方式\r\n");
      out.write("    //        queryParams:queryParams,//请求服务器时所传的参数\r\n");
      out.write("    //        sidePagination:'server',//指定服务器端分页\r\n");
      out.write("    //        pageSize:10,//单页记录数\r\n");
      out.write("    //        pageList:[5,10,20,30],//分页步进值\r\n");
      out.write("    //        showRefresh:true,//刷新按钮\r\n");
      out.write("    //        showColumns:true,\r\n");
      out.write("    //        clickToSelect: true,//是否启用点击选中行\r\n");
      out.write("    ////        toolbarAlign:'right',//工具栏对齐方式\r\n");
      out.write("    //        buttonsAlign:'right',//按钮对齐方式\r\n");
      out.write("    ////        toolbar:'#toolbar',//指定工作栏\r\n");
      out.write("    //    })\r\n");
      out.write("    //\r\n");
      out.write("    //    //请求服务数据时所传参数\r\n");
      out.write("    //    function queryParams(params){\r\n");
      out.write("    //        return{\r\n");
      out.write("    //            //每页多少条数据\r\n");
      out.write("    //            pageSize: params.limit,\r\n");
      out.write("    //            //请求第几页\r\n");
      out.write("    //            pageIndex:params.pageNumber,\r\n");
      out.write("    //        }\r\n");
      out.write("    //    }\r\n");
      out.write("    //\r\n");
      out.write("    //    //查询按钮事件\r\n");
      out.write("    ////    $('#search_btn').click(function(){\r\n");
      out.write("    ////        $('#mytab').bootstrapTable('refresh', {url: '../index.php/admin/index/userManagement'});\r\n");
      out.write("    ////    })\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("    //全局变量\r\n");
      out.write("    var adminType = getCookie(\"type\"); //0校区管理员，1总校区管理员\r\n");
      out.write("    var campusId = getCookie(\"campusId\");\r\n");
      out.write("\r\n");
      out.write("    //通用方法定义\r\n");
      out.write("    function setSuccess(message) {\r\n");
      out.write("        if (!message) {\r\n");
      out.write("            $(\"#operate-success\").text(\"Well, it works!\");\r\n");
      out.write("        } else {\r\n");
      out.write("            $(\"#operate-success\").text(message);\r\n");
      out.write("        }\r\n");
      out.write("        //$(\"#operate-success\").show();\r\n");
      out.write("        $(\"#operate-success\").css(\"visibility\", \"visible\");\r\n");
      out.write("        window.setTimeout(function () {\r\n");
      out.write("            //$(\"#operate-success\").hide();\r\n");
      out.write("            $(\"#operate-success\").css(\"visibility\", \"hidden\");\r\n");
      out.write("        }, 2000);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function typeFormatter(value, row, index) {\r\n");
      out.write("        var type = \"未定义\";\r\n");
      out.write("        switch (value) {\r\n");
      out.write("            case 0:\r\n");
      out.write("                type = \"分派员\";\r\n");
      out.write("                break;\r\n");
      out.write("            case 1:\r\n");
      out.write("                type = \"配送员\";\r\n");
      out.write("                break;\r\n");
      out.write("            case 2:\r\n");
      out.write("                type = \"普通用户\";\r\n");
      out.write("                break;\r\n");
      out.write("        }\r\n");
      out.write("        return type;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function actionFormatter(value, row, index) {\r\n");
      out.write("        if (adminType == 0) {\r\n");
      out.write("            //当前角色是校区管理员\r\n");
      out.write("            return [\r\n");
      out.write("                '<a class=\"admin ml8\" href=\"javascript:void(0)\" title=\"设为配送员\">',\r\n");
      out.write("                '&nbsp;<i class=\"glyphicon glyphicon-heart-empty\"></i>&nbsp;',\r\n");
      out.write("                '</a>',\r\n");
      out.write("                '<a class=\"common ml8\" href=\"javascript:void(0)\" title=\"设为普通用户\">',\r\n");
      out.write("                '&nbsp;<i class=\"glyphicon glyphicon-user\"></i>&nbsp;',\r\n");
      out.write("                '</a>',\r\n");
      out.write("                '<a class=\"superAdmin ml8\" href=\"javascript:void(0)\" title=\"设置分派员\">',\r\n");
      out.write("                '&nbsp;<i class=\"glyphicon glyphicon-heart\"></i>&nbsp;',\r\n");
      out.write("                '</a>'].join('');\r\n");
      out.write("        } else if (adminType == 1) {\r\n");
      out.write("            //当前角色是总校区管理员\r\n");
      out.write("            return \"无权操作\";\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    window.actionEvents = {\r\n");
      out.write("        'click .admin': function (e, value, row, index) {\r\n");
      out.write("            //alert(\"admin\");\r\n");
      out.write("            $.post(\"user/setUserAdmin\", {\r\n");
      out.write("                phone: row.phone,\r\n");
      out.write("                campusId: campusId,\r\n");
      out.write("                server: \"56846a8a2fee49d14901d39cc48b8b2a\"\r\n");
      out.write("            }, function (text) {\r\n");
      out.write("                if (text == -1 || text == 0) {\r\n");
      out.write("                    setSuccess(\"设置配送员失败。\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    setSuccess(\"设置配送员成功。\");\r\n");
      out.write("                    $('#table').bootstrapTable('updateRow', {\r\n");
      out.write("                        index: index,\r\n");
      out.write("                        row: {\r\n");
      out.write("                            type: 1\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    //$('#table').bootstrapTable('refresh', {silent: true});\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("        },\r\n");
      out.write("        'click .common': function (e, value, row, index) {\r\n");
      out.write("            //alert(\"common\");\r\n");
      out.write("            $.post(\"user/setUserCommon\", {\r\n");
      out.write("                phone: row.phone,\r\n");
      out.write("                campusId: campusId,\r\n");
      out.write("                server: \"56846a8a2fee49d14901d39cc48b8b2a\"\r\n");
      out.write("            }, function (text) {\r\n");
      out.write("                if (text == -1 || text == 0) {\r\n");
      out.write("                    setSuccess(\"设置为普通用户失败。\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    setSuccess(\"设置为普通用户成功。\");\r\n");
      out.write("                    $('#table').bootstrapTable('updateRow', {\r\n");
      out.write("                        index: index,\r\n");
      out.write("                        row: {\r\n");
      out.write("                            type: 2\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    //$('#table').bootstrapTable('refresh', {silent: true});\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("        },\r\n");
      out.write("        'click .superAdmin': function (e, value, row, index) {\r\n");
      out.write("            //alert(\"superAdmin\");\r\n");
      out.write("            $.post(\"user/setUserSuperAdmin\", {\r\n");
      out.write("                phone: row.phone,\r\n");
      out.write("                campusId: campusId,\r\n");
      out.write("                server: \"56846a8a2fee49d14901d39cc48b8b2a\"\r\n");
      out.write("            }, function (text) {\r\n");
      out.write("                if (text == -1 || text == 0) {\r\n");
      out.write("                    setSuccess(\"设置分派员失败。\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    setSuccess(\"设置分派员成功。\");\r\n");
      out.write("                    $('#table').bootstrapTable('updateRow', {\r\n");
      out.write("                        index: index,\r\n");
      out.write("                        row: {\r\n");
      out.write("                            type: 0\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    //$('#table').bootstrapTable('refresh', {silent: true});\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    };\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("    //需要执行的方法\r\n");
      out.write("    $(\"#table\").bootstrapTable('refreshOptions', function () {\r\n");
      out.write("        exportDataType: 'all'\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
